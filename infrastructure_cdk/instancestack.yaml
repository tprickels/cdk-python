Resources:
  BastionInstanceSecurityGroup71C3847E:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Instance-Stack/Bastion/Resource/InstanceSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      Tags:
        - Key: Name
          Value: Bastion Host
      VpcId:
        Fn::ImportValue: Network-Stack:ExportsOutputRefVPCB9E5F0B4BD23A326
    Metadata:
      aws:cdk:path: Instance-Stack/Bastion/Resource/InstanceSecurityGroup/Resource
  BastionInstanceRoleD3B36EDD:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: Name
          Value: Bastion Host
    Metadata:
      aws:cdk:path: Instance-Stack/Bastion/Resource/InstanceRole/Resource
  BastionInstanceRoleDefaultPolicy457C3156:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ec2messages:*
              - ssm:UpdateInstanceInformation
              - ssmmessages:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: BastionInstanceRoleDefaultPolicy457C3156
      Roles:
        - Ref: BastionInstanceRoleD3B36EDD
    Metadata:
      aws:cdk:path: Instance-Stack/Bastion/Resource/InstanceRole/DefaultPolicy/Resource
  BastionInstanceProfile8FFAF242:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: BastionInstanceRoleD3B36EDD
    Metadata:
      aws:cdk:path: Instance-Stack/Bastion/Resource/InstanceProfile
  Bastion6045F255:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      IamInstanceProfile:
        Ref: BastionInstanceProfile8FFAF242
      ImageId:
        Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amikernel510hvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t3.micro
      SecurityGroupIds:
        - Fn::GetAtt:
            - BastionInstanceSecurityGroup71C3847E
            - GroupId
      SubnetId:
        Fn::ImportValue: Network-Stack:ExportsOutputRefVPCPrivateSubnet1Subnet8BCA10E01F79A1B7
      Tags:
        - Key: Name
          Value: Bastion Host
      UserData:
        Fn::Base64: "#!/bin/bash"
    DependsOn:
      - BastionInstanceRoleDefaultPolicy457C3156
      - BastionInstanceRoleD3B36EDD
    Metadata:
      aws:cdk:path: Instance-Stack/Bastion/Resource/Resource
  ALBAEE750D2:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Name: myALB
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - ALBSecurityGroup8B8624F8
            - GroupId
      Subnets:
        - Fn::ImportValue: Network-Stack:ExportsOutputRefVPCPublicSubnet1SubnetB4246D30D84F935B
        - Fn::ImportValue: Network-Stack:ExportsOutputRefVPCPublicSubnet2Subnet74179F3969CC10AD
      Type: application
    Metadata:
      aws:cdk:path: Instance-Stack/ALB/Resource
  ALBSecurityGroup8B8624F8:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB InstanceStackALB7CE6C5EE
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Internet access ALB 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Fn::ImportValue: Network-Stack:ExportsOutputRefVPCB9E5F0B4BD23A326
    Metadata:
      aws:cdk:path: Instance-Stack/ALB/SecurityGroup/Resource
  ALBSecurityGrouptoInstanceStackGlobomanticsWebInstanceSecurityGroup81C61B198017EF7B86:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: ALB access 80 port of EC2 in Autoscaling Group
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - GlobomanticsWebInstanceSecurityGroup6E2438C9
          - GroupId
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - ALBSecurityGroup8B8624F8
          - GroupId
      IpProtocol: tcp
      ToPort: 80
    Metadata:
      aws:cdk:path: Instance-Stack/ALB/SecurityGroup/to InstanceStackGlobomanticsWebInstanceSecurityGroup81C61B19:80
  ALBWeb606B0C4F:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: ALBWebaddTargetGroupGroup2DA44672
          Type: forward
      LoadBalancerArn:
        Ref: ALBAEE750D2
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: Instance-Stack/ALB/Web/Resource
  ALBWebaddTargetGroupGroup2DA44672:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: "false"
      TargetType: instance
      VpcId:
        Fn::ImportValue: Network-Stack:ExportsOutputRefVPCB9E5F0B4BD23A326
    Metadata:
      aws:cdk:path: Instance-Stack/ALB/Web/addTargetGroupGroup/Resource
  GlobomanticsWebInstanceSecurityGroup6E2438C9:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Instance-Stack/Globomantics-Web/InstanceSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      Tags:
        - Key: Name
          Value: Instance-Stack/Globomantics-Web
      VpcId:
        Fn::ImportValue: Network-Stack:ExportsOutputRefVPCB9E5F0B4BD23A326
    Metadata:
      aws:cdk:path: Instance-Stack/Globomantics-Web/InstanceSecurityGroup/Resource
  GlobomanticsWebInstanceSecurityGroupfromInstanceStackALBSecurityGroup3C19648F80C06A1312:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: ALB access 80 port of EC2 in Autoscaling Group
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - GlobomanticsWebInstanceSecurityGroup6E2438C9
          - GroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::GetAtt:
          - ALBSecurityGroup8B8624F8
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: Instance-Stack/Globomantics-Web/InstanceSecurityGroup/from InstanceStackALBSecurityGroup3C19648F:80
  GlobomanticsWebInstanceRole26AB3238:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: Name
          Value: Instance-Stack/Globomantics-Web
    Metadata:
      aws:cdk:path: Instance-Stack/Globomantics-Web/InstanceRole/Resource
  GlobomanticsWebInstanceRoleDefaultPolicyC015A01E:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ec2messages:*
              - ssm:UpdateInstanceInformation
              - ssmmessages:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: GlobomanticsWebInstanceRoleDefaultPolicyC015A01E
      Roles:
        - Ref: GlobomanticsWebInstanceRole26AB3238
    Metadata:
      aws:cdk:path: Instance-Stack/Globomantics-Web/InstanceRole/DefaultPolicy/Resource
  GlobomanticsWebInstanceProfile3D0556A1:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: GlobomanticsWebInstanceRole26AB3238
    Metadata:
      aws:cdk:path: Instance-Stack/Globomantics-Web/InstanceProfile
  GlobomanticsWebLaunchTemplateA89E22B3:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        IamInstanceProfile:
          Arn:
            Fn::GetAtt:
              - GlobomanticsWebInstanceProfile3D0556A1
              - Arn
        ImageId:
          Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
        InstanceType: t3.micro
        Monitoring:
          Enabled: false
        SecurityGroupIds:
          - Fn::GetAtt:
              - GlobomanticsWebInstanceSecurityGroup6E2438C9
              - GroupId
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: Instance-Stack/Globomantics-Web/LaunchTemplate
          - ResourceType: volume
            Tags:
              - Key: Name
                Value: Instance-Stack/Globomantics-Web/LaunchTemplate
        UserData:
          Fn::Base64: ""
      TagSpecifications:
        - ResourceType: launch-template
          Tags:
            - Key: Name
              Value: Instance-Stack/Globomantics-Web/LaunchTemplate
    DependsOn:
      - GlobomanticsWebInstanceRoleDefaultPolicyC015A01E
      - GlobomanticsWebInstanceRole26AB3238
    Metadata:
      aws:cdk:path: Instance-Stack/Globomantics-Web/LaunchTemplate/Resource
  GlobomanticsWebASG843EC3E5:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: "2"
      LaunchTemplate:
        LaunchTemplateId:
          Ref: GlobomanticsWebLaunchTemplateA89E22B3
        Version:
          Fn::GetAtt:
            - GlobomanticsWebLaunchTemplateA89E22B3
            - LatestVersionNumber
      MaxSize: "5"
      MinSize: "2"
      Tags:
        - Key: Name
          PropagateAtLaunch: true
          Value: Instance-Stack/Globomantics-Web
      TargetGroupARNs:
        - Ref: ALBWebaddTargetGroupGroup2DA44672
      VPCZoneIdentifier:
        - Fn::ImportValue: Network-Stack:ExportsOutputRefVPCPrivateSubnet1Subnet8BCA10E01F79A1B7
        - Fn::ImportValue: Network-Stack:ExportsOutputRefVPCPrivateSubnet2SubnetCFCDAA7AB22CF85D
    UpdatePolicy:
      AutoScalingScheduledAction:
        IgnoreUnmodifiedGroupSizeProperties: true
    Metadata:
      aws:cdk:path: Instance-Stack/Globomantics-Web/ASG
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/2VQTW/CMAz9LdxDJgrSzjBNA6nSEHCfTGqKR+pUiTOGqv73qe3adXCy34dlPyd6tnjW8wlcw9Rkl6mlo672Auai4Bo+KjSJrlYQhByvXZCUOH6rDQcBNqj2aKInub15F0v1cuIHYrDei6+5xxAe6A13fAqRzfmARWlB2un/TK0ICl3tnG3Ftm6dJXNr4F/X7996dyKLtULbpDHWQXYEC2yI869EV8uytGSgCZo6yFathr7dPMZjHwVB/vX0/Ug/gM9RhleMYK0gigsGLHGuq2UUt+/A4L7n6lrtMLjou1++RymjtFnBQ4HSndFbarW9ydnx01zPEr2YfAaiqY8sVKDedfUHt0Ozu/wBAAA=
    Metadata:
      aws:cdk:path: Instance-Stack/CDKMetadata/Default
Outputs:
  BastionBastionHostId8F8CEB82:
    Description: Instance ID of the bastion host. Use this to connect via SSM Session Manager
    Value:
      Ref: Bastion6045F255
  ElbEndpoint:
    Value:
      Fn::GetAtt:
        - ALBAEE750D2
        - DNSName
Parameters:
  SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amikernel510hvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-kernel-5.10-hvm-x86_64-gp2
  SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

